package turbo.POJO;
// Generated Dec 16, 2015 11:33:51 AM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", schema = "public", uniqueConstraints = {
    @UniqueConstraint(columnNames = "email"),
    @UniqueConstraint(columnNames = "username")}
)
@JsonAutoDetect
public class User implements java.io.Serializable {

    private int id;
    
    private Account account;
    private UserRole userRole;
    private String username;
    
    private String password;
    private String email;
    
    @JsonIgnore
    private Set<UserBill> userBills = new HashSet<UserBill>(0);

    public User() {
    }

    public User(int id) {
        this.id = id;
    }

    public User(int id, Account account, UserRole userRole, String username, String password, String email, Set<UserBill> userBills) {
        this.id = id;
        this.account = account;
        this.userRole = userRole;
        this.username = username;
        this.password = password;
        this.email = email;
        this.userBills = userBills;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_account")
    public Account getAccount() {
        return this.account;
    }

    public void setAccount(Account account) {
        this.account = account;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_role")
    @JsonBackReference
    public UserRole getUserRole() {
        return this.userRole;
    }

    public void setUserRole(UserRole userRole) {
        this.userRole = userRole;
    }

    @Column(name = "username", unique = true)
    public String getUsername() {
        return this.username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @Column(name = "password")
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "email", unique = true)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    @JsonBackReference
    public Set<UserBill> getUserBills() {
        return this.userBills;
    }

    public void setUserBills(Set<UserBill> userBills) {
        this.userBills = userBills;
    }

}
